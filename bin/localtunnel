#!/usr/bin/env ruby
require 'rubygems'
require 'net/ssh'
require 'net/ssh/gateway'
require 'net/http'
require 'uri'

require 'lib/gateway'

local_port = ARGV[0]

key_option = ARGV[ARGV.index('-k')+1]
key = File.exist?(key_options) ? File.open(key_option).read : nil

def register_tunnel(key=nil)
  url = URI.parse("http://open.localtunnel.com")
  if key
    return Net::HTTP.post_form(url, {"key" => pk})
  else
    return Net::HTTP.get(url)
  end
end

def start_tunnel(tunnel)
  port, host = tunnel.split(':')
  user, host = host.split('@')
  gateway = Net::SSH::Gateway.new(host, user)
  gateway.open_remote(local_port.to_i, '127.0.0.1', port.to_i) do |a,b|
    puts "http://#{host} now tunnels to local port #{local_port}..."
    while true
      sleep 1
    end
  end
end

begin
  start_tunnel(register_tunnel(key))
rescue Net::SSH::AuthenticationFailed
  puts "Failed to authenticate. If this is your first tunnel, you need to"
  puts "upload a public key using the -k option."
end

